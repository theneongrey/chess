openapi: 3.0.0
info:
  title: Chess API
  description: Microservices for chess api
  version: 0.1.0
servers:
  - url: localhst
    description: Testserver
paths:
  /game/users:
    get:
      description: Returns a list of users.
      tags: 
        - users
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/User'
    post:
      description: Create a new user
      tags: 
        - users
      requestBody:
        required: true
        description: A JSON object that contains the user name.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: Created
        '400':
          description: bad request
  /game/users/{id}:
    get:
      description: Returns a user.
      tags: 
        - users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A user
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'
        '404':
          description: user not found
    put:
      description: Updates a user
      tags: 
        - users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        description: A JSON object that contains the user name.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '200':
          description: Update successful
        '404':
          description: user not found
    delete:
      description: Deletes a user
      tags: 
        - users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: deletion successful
        '404':
          description: user not found
  /game/games/:
    get:
      description: Returns a list of games.
      tags: 
        - game
      responses:
        '200':
          description: A JSON array of games
          content:
            application/json:
              schema: 
                type: array
                items:
                    $ref: '#/components/schemas/GameShort'
        '404':
          description: user not found
    post:
      description: Create a new game
      tags: 
        - game
      requestBody:
        required: true
        description: A JSON object that contains the user name.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGame'
      responses:
        '201':
          description: Created
        '400':
          description: bad request
  /game/games/{id}:
    get:
      description: Returns a game.
      tags: 
        - game
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A user
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Game'
        '404':
          description: game not found
    put:
      description: Moves a piece.
      tags: 
        - game
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        description: A JSON object that contains the user name.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMove'
            
      responses:
        '200':
          description: A user
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Game'
        '404':
          description: game not found
        
    delete:
      description: Deletes a game
      tags: 
        - game
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: deletion successful
        '404':
          description: game not found
components:
  schemas:
    NewMove:
      type: object
      properties:
        from:
          type: string
          example: A2
        to:
          type: string
          example: A4
    NewGame:
      type: object
      properties:
        player1:
          type: string
          format: uuid
        player2: 
          type: string
          format: uuid
    Game:
      type: object
      properties:
        id:
          type: string
          format: uuid
        cells:
          type: array
          items: 
              type: string
        state:
          type: string
        isItWhitesTurn:
          type: boolean
        isCheckPending:
          type: boolean
        player1:
          $ref: '#/components/schemas/User'
        player2:
          $ref: '#/components/schemas/User'
    GameShort:
      type: object
      properties:
        id:
          type: string
          format: uuid
        state:
          type: string
        player1:
          $ref: '#/components/schemas/User'
        player2:
          $ref: '#/components/schemas/User'
    NewUser:
      type: object
      properties:
        name:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string